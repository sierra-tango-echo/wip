<%
require 'ipaddr'
def to_cidr(network,netmask)
  "#{network.to_s}/#{IPAddr.new(netmask.to_s).to_i.to_s(2).count('1')}" rescue "#{network.to_s}/#{netmask.to_s}"
end
-%>
{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "<%=config.cluster%>network",
      "apiVersion": "2017-03-01",
      "tags": {
        "Name": "<%=config.cluster%>",
        "alcescluster": "<%=config.cluster%>"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "<%=to_cidr(config.domainnetwork,config.domainnetmask)%>"
          ]
        },
        "subnets": [
<% networks = config.networks.select{|_,n| n.defined && !n.dhcp}
networks.each_with_index do |(networkname,network),idx| -%>
          {
            "name": "<%=config.cluster%><%=networkname%>",
            "properties": {
              "addressPrefix": "<%=to_cidr(network.network,network.netmask)%>"
            }
          }<%= idx + 1 == networks.length ? '' : ',' %>
<% end -%>
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "<%=config.cluster%>securitygroup",
      "apiVersion": "2017-03-01",
      "tags": {
        "Name": "<%=config.cluster%>",
        "alcescluster": "<%=config.cluster%>"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [{
           "name": "inbound-ssh",
             "properties": {
             "protocol": "TCP",
             "sourcePortRange": "*",
             "destinationPortRange": "22",
             "sourceAddressPrefix": "213.83.69.6/32",
             "destinationAddressPrefix": "*",
             "access": "Allow",
             "priority": 1000,
             "direction": "Inbound"
           }
         }]
       }
    },
<% nodes.each_with_index do |node,idx| -%>
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "<%=config.cluster%><%=node.name%>pubIP",
      "apiVersion": "2017-03-01",
      "tags": {
        "Name": "<%=config.cluster%>",
        "alcescluster": "<%=config.cluster%>"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 30,
        "dnsSettings": {
          "domainNameLabel": "<%=config.cluster%>-<%=node.name%>"
        }
      }
    },
<% networks=node.config.networks.select{|_,n| n.defined && !n.dhcp }
networks.each_with_index do |(networkname,network),idx| -%>
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "<%=config.cluster%><%=node.name%><%=networkname%>interface",
      "apiVersion": "2017-03-01",
      "tags": {
        "Name": "<%=config.cluster%>",
        "alcescluster": "<%=config.cluster%>"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "ipConfigurations": [{
          "name": "<%=config.cluster%><%=node.name%><%=networkname%>ip",
          "properties": {
            "privateIPAllocationMethod": "Static",
            "privateIPAddress": "<%=network.ip%>",
<% if network.primary -%>
            "publicIPAddress": {
              "id": "[resourceId('Microsoft.Network/publicIpAddresses', '<%=config.cluster%><%=node.name%>pubIP')]"
            },
<% end -%>
            "subnet": {
              "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', '<%=config.cluster%>network', '<%=config.cluster%><%=networkname%>')]"
            }
          }
        }],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', '<%=config.cluster%>securitygroup')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', '<%=config.cluster%>securitygroup')]"
      ]
    },
<% end -%>
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "<%=config.cluster%><%=node.name%>",
      "apiVersion": "2016-04-30-preview",
      "tags": {
        "Name": "<%=config.cluster%>",
        "alcescluster": "<%=config.cluster%>"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "hardwareProfile": {
	  "vmSize": "Standard_DS3_v2"
	},
        "storageProfile": {
	  "imageReference": {
            "publisher": "OpenLogic",
            "offer": "CentOS",
            "sku": "7.3",
            "version": "latest"
	  },
	  "osDisk": {
	    "createOption": "fromImage",
	    "managedDisk": {
              "storageAccountType": "Premium_LRS"
	    }
	  }
	},
	"osProfile": {
          "computerName": "<%=node.config.networks.pri.hostname%>",
          "adminUsername": "tist",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
            "publicKeys": [{
              "path": "[concat ('/home/tist', '/.ssh/authorized_keys')]",
              "keyData": "<%=config.publickey%>"
              }]
            }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
<% networks = config.networks.select{|_,n| n.defined && !n.dhcp}
networks.each_with_index do |(networkname,network),idx| -%>
          {
	    "id": "[resourceId('Microsoft.Network/networkInterfaces', '<%=config.cluster%><%=node.name%><%=networkname%>interface')]",
	    "properties": {
	      "primary": <%if network.primary%>true<%else%>false<%end%>
	    }
          }<%= (idx + 1 == networks.length) ? '' : ',' %>
<%end-%>
          ]
        }
      },
      "dependsOn": [
<% networks = config.networks.select{|_,n| n.defined && !n.dhcp}
networks.each_with_index do |(networkname,network),idx| -%>
        "[resourceId('Microsoft.Network/networkInterfaces', '<%=config.cluster%><%=node.name%><%=networkname%>interface')]"<%= (idx + 1 == networks.length) ? '' : ',' %>
<%end-%>
      ]  
    },
    {
      "name": "<%=config.cluster%><%=node.name%>/startupscript",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/', '<%=config.cluster%><%=node.name%>')]"
      ],
      "tags": {
        "Name": "<%=config.cluster%>",
        "alcescluster": "<%=config.cluster%>"
      },
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
        },
        "protectedSettings": {
          "commandToExecute": "echo 'moose' > /tmp/foo"
        }
      }
    }<%= (idx + 1 == nodes.length) ? '' : ',' %>
<%end -%>
  ],
  "outputs": {
<% nodes.each_with_index do |node,idx| -%>
    "<%=config.cluster%><%=node.name%>pubIP": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/publicIPAddresses', '<%=config.cluster%><%=node.name%>pubIP')]"
    }<%= (idx + 1 == nodes.length) ? '' : ',' %>
<% end -%>
  }
}    
