<%
require 'ipaddr'
def to_cidr(network,netmask)
  "#{network.to_s}/#{IPAddr.new(netmask.to_s).to_i.to_s(2).count('1')}"
end
name=node.name
-%>
---
Description: 'Flight Machine Template'
Mappings:
  RegionMap:
    eu-west-1:
      "AMI": "ami-d266dfab"
    eu-west-2:
      "AMI": "ami-c5f11ea2"

Resources:
  <%=name%>SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: <%=name%>
      GroupDescription: 'Primary SG for <%=name%>'
      VpcId: <%=config.domaincloudID%>
      SecurityGroupIngress:
        -
          IpProtocol: '-1'
          FromPort: 0
          ToPort: 65535
          CidrIp: '<%=to_cidr(config.domainnetwork,config.domainnetmask)%>'
          Description: 'Allow all traffic for cluster VPC'
        -
          IpProtocol: 'tcp'
          FromPort: 22
          ToPort: 22
          CidrIp: '213.83.69.6/32'
          Description: 'Allow inbound SSH access'
        -
          IpProtocol: 'icmp'
          FromPort: '8'
          ToPort: '-1'
          CidrIp: '0.0.0.0/0'
          Description: 'Allow ping'
      SecurityGroupEgress:
        -
          IpProtocol: '-1'
          FromPort: 0
          ToPort: 65535
          CidrIp: '0.0.0.0/0'
          Description: 'Allow outbound internet access'
      Tags:
        -
          Key: 'Name'
          Value: '<%=name%>'
        -
          Key: 'alcescluster'
          Value: <%=config.cluster%> 
<% config.networks.each do |netname,network| -%>
<% if network.defined -%>

  <%=name%><%=netname%>Interface:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SourceDestCheck: false
      GroupSet:
        - !Ref <%=name%>SecurityGroup
      PrivateIpAddress: <%=network.ip %>
      SubnetId: <%=network.cloudID %>
      Tags:
        -
          Key: 'Name'
          Value: '<%=name%>'
        -
          Key: 'alcescluster'
          Value: <%=config.cluster%>
<% end -%>
<% end -%>

  <%=node.name%>:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: !Select
        - 0
        - Fn::GetAZs: !Ref 'AWS::Region'
      ImageId: !FindInMap ["RegionMap", !Ref "AWS::Region", "AMI"]
      InstanceType: t2.small
      Monitoring: true
      KeyName: aws_ireland
      NetworkInterfaces:
<% count=0; config.networks.each do |name,network| -%>
<% if network.defined -%>
        -
          NetworkInterfaceId: !Ref <%=node.name%><%=name%>Interface
          DeviceIndex: <%=count%>
<% count+=1 -%>
<% end -%>
<% end -%>

      Tags:
        -
          Key: 'Name'
          Value: '<%=name%>'
        -
          Key: 'alcescluster'
          Value: <%=config.cluster%>
      UserData:
        Fn::Base64:
          Fn::Join:
            - ''
            - - "#cloud-config\n"
              - "hostname: <%=name%>\n"
              - "fqdn: <%=config.networks.pri.hostname%>\n"
              - "runcmd:\n"
              - "  - curl <%= config.nodescripturl %> | /bin/bash | tee /tmp/mainscript-default-output\n"

<% if config.role == 'login' -%>
  <%=node.name%>publicIp:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  <%=node.name%>publicIpAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      NetworkInterfaceId: !Ref <%=node.name%>priInterface
      AllocationId: !GetAtt <%=node.name%>publicIp.AllocationId
<% end -%>
